<%@ include file="/WEB-INF/tags/eom/PortalConfig/np-free/taglibs.jpt" %>

<%-- DOTUN: including functions library --%>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>

<p:currentObject content="data" metadata="meta" />
<c:set var="extraClasses" value="${cacheScope.extraClasses}" />

<%--
		DOTUN: create boolean flag to check
		if a related query has already been fetched.
		When true, reject additional requests.
--%>
<c:set var="queryFetched" value="false" />

<%-- Set indicator that determines if we have at least one related photo item.  --%>
<c:set var="relatedItemsExist" value="false" />
<c:set var="queryItemsExist" value="false" />

<%-- DOTUN: set query limit variable for single source of editing --%>
<c:set var="relatedBoxLimit" value="9" />

<%-- 
		------------------------------------------------------------------------------------
		DOTUN: "Functions".
		The idea is to wrap repeating code
		in function constructs of some sort
		and call where needed.
 --%>
<fn:makeRelatedObjectWrapper>
	<%@ attribute name="relatedObject" required="true" type="java.lang.String" %> 
	<np-free:wrapper webObject="${relatedObject}"
		headline="relatedHeadline" imgUrl="relatedImgUrl"
		content="relatedContent" description="relatedDescription"
		objUrl="relatedObjUrl" sectionTag="relatedSectionTag"
		sectionTagUrl="relatedSectionTagUrl" imgObj="imgObj" />
</fn:makeRelatedObjectWrapper>

<fn:printRelatedObject>
	<c:if var="isDocument" test="${relatedObjectWebType eq 'Document'}">
		<p:getObject var="relatedDocument" xpath="$relatedData/doc/story/story-links/*[1]/@href" />
		<p:url var="relatedObjUrl" webObject="${relatedDocument}" type="resource" />
		<c:if test="${empty relatedImgUrl and (relatedDocument.eomType eq 'Word' or relatedDocument.eomType eq 'Excel' or relatedDocument.eomType eq 'Powerpoint' or relatedDocument.eomType eq 'PDF')}">
			<p:url var="relatedImgUrl" value="/PortalConfig/np-free/assets/common/images/documents/${fn:toLowerCase(relatedDocument.eomType)}.png" />
		</c:if>
	</c:if>

	<p:out var="objUrl" value="${relatedObjUrl}" />

	<c:if var="isLink" test="${relatedObjectWebType eq 'Link'}">
		<p:out var="objUrl" xvalue="$relatedMeta//ExternalLink" />
		<p:out var="objTarget" xvalue="$relatedMeta//ExternalTarget" />
	</c:if>

	<p:out var="hasImage" value="${not empty relatedImgUrl}" />

	<li data-index="${stat.index}" class="${(stat.last and !showMoreLink and queryItemsExist ) ? 'last-item' : ''} ${hasImage ? '' : ' no-image'}">
		<a href="${objUrl}" class="related-object-link" target="${isLink?objTarget:'_self'}">
			<c:if test="${hasImage}">
				<div class="tease-image">
					<%-- <np-free:imgFluid fileref="${imgObj}" title="${headline}" /> --%>
					<np-free:img src="${relatedImgUrl}" ratio="16:9" title="${headline}" />
				</div>
			</c:if>
			<div class="tease-headline">${relatedHeadline}</div>
		</a>
	</li>
</fn:printRelatedObject>
<%--
		DOTUN: end "functions"
		------------------------------------------------------------------------------------
--%>

<p:list var="relatedObjectList">
	<x:forEach
		select="$data/doc/story/story-links/descendant::node()/@href | $data/doc/story/story-links/descendant::node()/@fileref"
		var="item" varStatus="stat">

		<p:getObject xpath="$item" var="relatedObject" />
		<p:object webObject="${relatedObject}" metadata="relatedMeta" />
		<p:out xvalue="$relatedMeta//WebType" var="webType" />

		<c:choose>
			<c:when
				test="${false queryFetched and not empty relatedObject and webType ne 'image' and webType ne 'Sponsor' and webType ne ''}">
				<%-- DOTUN: set queryFetched = true to reject subsequent requests --%>
				<c:set queryFetched="true" />
				<p:add value="${relatedObject}" />
				<%-- We have at least one related item, so set indicator.  --%>
				<c:set var="relatedItemsExist" value="true" />
			</c:when>
			<c:when
				test="${not empty relatedObject and (relatedObject.eomType eq 'EOM::Query' or relatedObject.eomType eq 'EOM::AlertQuery')}">
				<%-- We have at least one related query, so set indicator.  --%>
				<c:set var="relatedItemsQueryExist" value="true" />
				<p:getCollection var="relatedQuery" webObject="${relatedObject}" />
				<np-free:uniq var="relatedQuery" list="${relatedQuery}" forceVisible="true" />
			</c:when>
			<c:otherwise>
				<%-- not displaying unsupported type: ${webType}  --%>

			</c:otherwise>
		</c:choose>
	</x:forEach>
</p:list>


<c:set var="relatedItemCount" value="0" scope="page" />

<c:if test="${relatedItemsExist or relatedItemsQueryExist}">
	<%-- Related Content: ${fn:length(relatedObjectList)} items --%>
	<div class="related-content-container margin-bottom clearfix ${extraClasses}">
		<h5 class="section-heading uppercase">Related</h5>
		<ul class="related-headlines">


			<c:forEach items="${relatedObjectList}" var="relatedObject" varStatus="stat" end="relatedBoxLimit">

				<p:object webObject="${relatedObject}" metadata="relatedMeta" content="relatedData" />
				<p:out var="relatedObjectWebType" xvalue="$relatedMeta//WebType" />

				<c:if test="${ relatedObjectWebType ne 'story' }" var="isStory">
					<c:set var="queryItemsExist" value="true" />
				</c:if>

				<%-- DOTUN: using related object wrapper "function" -->
				<fn:makeRelatedObjectWrapper relatedObject=${relatedObject} />
                
                <%--
                    Override for related image url: Sometimes the related gallery object also has related objects that
                    generate a story-links/media-group xml. When this happens the related gallery shows the first related
                    link image instead, since story-links appears above all media-group nodes. The overly generic xpath
                    in wrapper.tag finds all media-groups. We need to override this to produce the correct image.
                --%>
                <p:object webObject="${relatedObject}" content="relatedData" />
                <p:url var="relatedImgUrl" xvalue="$relatedData//media-group[not(ancestor::story-links)]/photo/@fileref" format="image_inline" onError="ignore" />

				<%-- DOTUN: using print related object "function" -->
				<fn:printRelatedObject />
                <c:set var="relatedItemCount" value="${relatedItemCount + 1}" scope="page" />
			</c:forEach>

<c:set var="relatedItemsEnd" value="${relatedBoxLimit - relatedItemCount}" />
<c:set var="queryItemsEnd" value="${relatedBoxLimit - relatedItemCount}" />

<c:if test="${relatedItemsEnd < 0}">
	<c:set var="relatedItemsEnd" value="0" />
</c:if>

<%--  Increase the count for related items by Query if some of them are not stories. Excluding images for example --%>
<c:forEach items="${relatedQuery}" var="relatedObject"
	end="${relatedItemsEnd}" varStatus="stat">
	<p:object webObject="${relatedObject}" metadata="relatedMeta"
		content="relatedData" />
	<p:out var="relatedObjectWebType" xvalue="$relatedMeta//WebType" />
	<c:if test="${ relatedObjectWebType eq 'image' }" var="isImage">
		<c:set var="queryItemsEnd" value="${queryItemsEnd + 1}" />
	</c:if>
</c:forEach>

<c:if test="${(relatedItemsQueryExist eq 'true' and queryItemsEnd > 0) or (queryItemsEnd == relatedBoxLimit and relatedItemsQueryExist eq 'true' )}">
	<c:forEach items="${relatedQuery}" var="relatedObject" end="${queryItemsEnd }" varStatus="stat">

		<p:object webObject="${relatedObject}" metadata="relatedMeta" content="relatedData" />
		<p:out var="relatedObjectWebType" xvalue="$relatedMeta//WebType" />

		<%-- DOTUN: using related object wrapper "function" -->
		<fn:makeRelatedObjectWrapper relatedObject=${relatedObject} />

		<%-- DOTUN: using print related object "function" -->
		<fn:printRelatedObject />
	</c:forEach>
</c:if>
</ul>
</div>

</c:if>